

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Tue Dec 18 10:51:55 2018

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F690
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 9 "C:\Users\Administrator\Documents\rea\FOLLOW LINE.C"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 9 "C:\Users\Administrator\Documents\rea\FOLLOW LINE.C"
    45  2007  F0D4               	dw 0xFFFC & 0xFFF7 & 0xFFFF & 0xFFDF & 0xFFFF & 0xFFFF & 0xFCFF & 0xFBFF & 0xF7FF ;#
    46                           	FNCALL	_main,_init_hardware
    47                           	FNROOT	_main
    48                           	global	_leftSensor
    49                           	global	_rightSensor
    50                           	global	_ADCON0
    51                           psect	text76,local,class=CODE,delta=2
    52                           global __ptext76
    53  0000                     __ptext76:
    54  001F                     _ADCON0	set	31
    55                           	global	_ADCON0bits
    56  001F                     _ADCON0bits	set	31
    57                           	global	_ADRESH
    58  001E                     _ADRESH	set	30
    59                           	global	_PORTA
    60  0005                     _PORTA	set	5
    61                           	global	_PORTB
    62  0006                     _PORTB	set	6
    63                           	global	_PORTC
    64  0007                     _PORTC	set	7
    65                           	global	_CARRY
    66  0018                     _CARRY	set	24
    67                           	global	_GIE
    68  005F                     _GIE	set	95
    69                           	global	_GO_DONE
    70  00F9                     _GO_DONE	set	249
    71                           	global	_RC0
    72  0038                     _RC0	set	56
    73                           	global	_RC1
    74  0039                     _RC1	set	57
    75                           	global	_RC3
    76  003B                     _RC3	set	59
    77                           	global	_RC4
    78  003C                     _RC4	set	60
    79                           	global	_RC7
    80  003F                     _RC7	set	63
    81                           	global	_TRISA
    82  0085                     _TRISA	set	133
    83                           	global	_TRISB
    84  0086                     _TRISB	set	134
    85                           	global	_TRISC
    86  0087                     _TRISC	set	135
    87                           	global	_ANSEL
    88  011E                     _ANSEL	set	286
    89                           	global	_ANSELH
    90  011F                     _ANSELH	set	287
    91                           	global	_EEADR
    92  010D                     _EEADR	set	269
    93                           	global	_EEDATA
    94  010C                     _EEDATA	set	268
    95                           	global	_EECON1
    96  018C                     _EECON1	set	396
    97                           	global	_EECON2
    98  018D                     _EECON2	set	397
    99                           	global	_RD
   100  0C60                     _RD	set	3168
   101                           	global	_WR
   102  0C61                     _WR	set	3169
   103                           	global	_WREN
   104  0C62                     _WREN	set	3170
   105                           	file	"following line.as"
   106                           	line	#
   107                           psect cinit,class=CODE,delta=2
   108                           global start_initialization
   109  06E9                     start_initialization:
   110                           
   111                           psect	bssCOMMON,class=COMMON,space=1
   112                           global __pbssCOMMON
   113  0070                     __pbssCOMMON:
   114  0070                     _leftSensor:
   115  0070                            ds      1
   116                           
   117  0071                     _rightSensor:
   118  0071                            ds      1
   119                           
   120                           ; Clear objects allocated to COMMON
   121                           psect cinit,class=CODE,delta=2
   122  06E9  01F0               	clrf	((__pbssCOMMON)+0)&07Fh
   123  06EA  01F1               	clrf	((__pbssCOMMON)+1)&07Fh
   124                           psect cinit,class=CODE,delta=2
   125                           global end_of_initialization
   126                           
   127                           ;End of C runtime variable initialization code
   128                           
   129  06EB                     end_of_initialization:
   130  06EB  0183               clrf status
   131  06EC  118A  2F04         ljmp _main	;jump to C main() function
   132                           psect	cstackCOMMON,class=COMMON,space=1
   133                           global __pcstackCOMMON
   134  0072                     __pcstackCOMMON:
   135                           	global	?_init_hardware
   136  0072                     ?_init_hardware:	; 0 bytes @ 0x0
   137                           	global	??_init_hardware
   138  0072                     ??_init_hardware:	; 0 bytes @ 0x0
   139                           	global	?_main
   140  0072                     ?_main:	; 0 bytes @ 0x0
   141                           	global	??_main
   142  0072                     ??_main:	; 0 bytes @ 0x0
   143  0072                     	ds	2
   144 ;;Data sizes: Strings 0, constant 0, data 0, bss 2, persistent 0 stack 0
   145 ;;Auto spaces:   Size  Autos    Used
   146 ;; COMMON          14      2       4
   147 ;; BANK0           80      0       0
   148 ;; BANK1           80      0       0
   149 ;; BANK2           80      0       0
   150                           
   151 ;;
   152 ;; Pointer list with targets:
   153                           
   154                           
   155                           
   156 ;;
   157 ;; Critical Paths under _main in COMMON
   158 ;;
   159 ;;   None.
   160 ;;
   161 ;; Critical Paths under _main in BANK0
   162 ;;
   163 ;;   None.
   164 ;;
   165 ;; Critical Paths under _main in BANK1
   166 ;;
   167 ;;   None.
   168 ;;
   169 ;; Critical Paths under _main in BANK2
   170 ;;
   171 ;;   None.
   172                           
   173 ;;
   174 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   175 ;;
   176                           
   177 ;;
   178 ;;Call Graph Tables:
   179 ;;
   180 ;; ---------------------------------------------------------------------------------
   181 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   182 ;; ---------------------------------------------------------------------------------
   183 ;; (0) _main                                                 2     2      0       0
   184 ;;                                              0 COMMON     2     2      0
   185 ;;                      _init_hardware
   186 ;; ---------------------------------------------------------------------------------
   187 ;; (1) _init_hardware                                        0     0      0       0
   188 ;; ---------------------------------------------------------------------------------
   189 ;; Estimated maximum stack depth 1
   190 ;; ---------------------------------------------------------------------------------
   191                           
   192 ;; Call Graph Graphs:
   193                           
   194 ;; _main (ROOT)
   195 ;;   _init_hardware
   196 ;;
   197                           
   198 ;; Address spaces:
   199                           
   200 ;;Name               Size   Autos  Total    Cost      Usage
   201 ;;BITCOMMON            E      0       0       0        0.0%
   202 ;;EEDATA             100      0       0       0        0.0%
   203 ;;NULL                 0      0       0       0        0.0%
   204 ;;CODE                 0      0       0       0        0.0%
   205 ;;COMMON               E      2       4       1       28.6%
   206 ;;BITSFR0              0      0       0       1        0.0%
   207 ;;SFR0                 0      0       0       1        0.0%
   208 ;;BITSFR1              0      0       0       2        0.0%
   209 ;;SFR1                 0      0       0       2        0.0%
   210 ;;STACK                0      0       1       2        0.0%
   211 ;;BANK0               50      0       0       3        0.0%
   212 ;;BITBANK1            50      0       0       4        0.0%
   213 ;;BITSFR3              0      0       0       4        0.0%
   214 ;;SFR3                 0      0       0       4        0.0%
   215 ;;BANK1               50      0       0       5        0.0%
   216 ;;BITSFR2              0      0       0       5        0.0%
   217 ;;SFR2                 0      0       0       5        0.0%
   218 ;;BITBANK2            50      0       0       6        0.0%
   219 ;;BANK2               50      0       0       7        0.0%
   220 ;;ABS                  0      0       4       8        0.0%
   221 ;;BITBANK0            50      0       0       9        0.0%
   222 ;;DATA                 0      0       5      10        0.0%
   223                           
   224                           	global	_main
   225                           psect	maintext,global,class=CODE,delta=2
   226                           global __pmaintext
   227  0704                     __pmaintext:
   228                           
   229 ;; *************** function _main *****************
   230 ;; Defined at:
   231 ;;		line 23 in file "C:\Users\Administrator\Documents\rea\FOLLOW LINE.C"
   232 ;; Parameters:    Size  Location     Type
   233 ;;		None
   234 ;; Auto vars:     Size  Location     Type
   235 ;;		None
   236 ;; Return value:  Size  Location     Type
   237 ;;		None               void
   238 ;; Registers used:
   239 ;;		wreg, status,2, status,0, pclath, cstack
   240 ;; Tracked objects:
   241 ;;		On entry : 17F/0
   242 ;;		On exit  : 0/0
   243 ;;		Unchanged: 0/0
   244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   245 ;;      Params:         0       0       0       0
   246 ;;      Locals:         0       0       0       0
   247 ;;      Temps:          2       0       0       0
   248 ;;      Totals:         2       0       0       0
   249 ;;Total ram usage:        2 bytes
   250 ;; Hardware stack levels required when called:    1
   251 ;; This function calls:
   252 ;;		_init_hardware
   253 ;; This function is called by:
   254 ;;		Startup code after reset
   255 ;; This function uses a non-reentrant model
   256 ;;
   257                           psect	maintext
   258                           	file	"C:\Users\Administrator\Documents\rea\FOLLOW LINE.C"
   259                           	line	23
   260                           	global	__size_of_main
   261  00FC                     	__size_of_main	equ	__end_of_main-_main
   262                           	
   263  0704                     _main:	
   264                           	opt	stack 7
   265                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   266                           	line	24
   267                           	
   268  0704                     l3014:	
   269                           ;FOLLOW LINE.C: 24: PORTC=0b00000000;
   270  0704  1283               	bcf	status, 5	;RP0=0, select bank0
   271  0705  1303               	bcf	status, 6	;RP1=0, select bank0
   272  0706  0187               	clrf	(7)	;volatile
   273                           	line	25
   274                           	
   275  0707                     l3016:	
   276                           ;FOLLOW LINE.C: 25: init_hardware();
   277  0707  118A  26EE  118A   	fcall	_init_hardware
   278  070A  2F0B               	goto	l3018
   279                           	line	26
   280                           ;FOLLOW LINE.C: 26: while(1)
   281                           	
   282  070B                     l895:	
   283                           	line	28
   284                           	
   285  070B                     l3018:	
   286                           ;FOLLOW LINE.C: 27: {
   287                           ;FOLLOW LINE.C: 28: PORTC=0b00000000;
   288  070B  1283               	bcf	status, 5	;RP0=0, select bank0
   289  070C  1303               	bcf	status, 6	;RP1=0, select bank0
   290  070D  0187               	clrf	(7)	;volatile
   291                           	line	30
   292                           	
   293  070E                     l3020:	
   294                           ;FOLLOW LINE.C: 30: ADCON0bits.CHS=0B1011;
   295  070E  081F               	movf	(31),w	;volatile
   296  070F  39C3               	andlw	not (((1<<4)-1)<<2)
   297  0710  382C               	iorlw	(0Bh & ((1<<4)-1))<<2
   298  0711  009F               	movwf	(31)	;volatile
   299                           	line	31
   300                           	
   301  0712                     l3022:	
   302                           ;FOLLOW LINE.C: 31: GO_DONE=1;
   303  0712  149F               	bsf	(249/8),(249)&7
   304                           	line	32
   305                           ;FOLLOW LINE.C: 32: while(GO_DONE==1){}
   306  0713  2F14               	goto	l896
   307                           	
   308  0714                     l897:	
   309                           	
   310  0714                     l896:	
   311  0714  189F               	btfsc	(249/8),(249)&7
   312  0715  2F17               	goto	u2221
   313  0716  2F18               	goto	u2220
   314  0717                     u2221:
   315  0717  2F14               	goto	l896
   316  0718                     u2220:
   317  0718  2F19               	goto	l3024
   318                           	
   319  0719                     l898:	
   320                           	line	33
   321                           	
   322  0719                     l3024:	
   323                           ;FOLLOW LINE.C: 33: rightSensor=ADRESH;
   324  0719  081E               	movf	(30),w	;volatile
   325  071A  00F2               	movwf	(??_main+0)+0
   326  071B  0872               	movf	(??_main+0)+0,w
   327  071C  00F1               	movwf	(_rightSensor)
   328                           	line	35
   329                           ;FOLLOW LINE.C: 35: _delay(10);
   330                           	opt asmopt_off
   331  071D  3003               movlw	3
   332  071E  00F2               movwf	(??_main+0)+0,f
   333  071F                     u2367:
   334  071F  0BF2               decfsz	(??_main+0)+0,f
   335  0720  2F1F               	goto	u2367
   336                           opt asmopt_on
   337                           
   338                           	line	37
   339                           	
   340  0721                     l3026:	
   341                           ;FOLLOW LINE.C: 37: ADCON0bits.CHS=0B1010;
   342  0721  1283               	bcf	status, 5	;RP0=0, select bank0
   343  0722  1303               	bcf	status, 6	;RP1=0, select bank0
   344  0723  081F               	movf	(31),w	;volatile
   345  0724  39C3               	andlw	not (((1<<4)-1)<<2)
   346  0725  3828               	iorlw	(0Ah & ((1<<4)-1))<<2
   347  0726  009F               	movwf	(31)	;volatile
   348                           	line	38
   349                           	
   350  0727                     l3028:	
   351                           ;FOLLOW LINE.C: 38: GO_DONE=1;
   352  0727  149F               	bsf	(249/8),(249)&7
   353                           	line	39
   354                           ;FOLLOW LINE.C: 39: while(GO_DONE==1){}
   355  0728  2F29               	goto	l899
   356                           	
   357  0729                     l900:	
   358                           	
   359  0729                     l899:	
   360  0729  189F               	btfsc	(249/8),(249)&7
   361  072A  2F2C               	goto	u2231
   362  072B  2F2D               	goto	u2230
   363  072C                     u2231:
   364  072C  2F29               	goto	l899
   365  072D                     u2230:
   366  072D  2F2E               	goto	l3030
   367                           	
   368  072E                     l901:	
   369                           	line	40
   370                           	
   371  072E                     l3030:	
   372                           ;FOLLOW LINE.C: 40: leftSensor=ADRESH;
   373  072E  081E               	movf	(30),w	;volatile
   374  072F  00F2               	movwf	(??_main+0)+0
   375  0730  0872               	movf	(??_main+0)+0,w
   376  0731  00F0               	movwf	(_leftSensor)
   377                           	line	41
   378                           ;FOLLOW LINE.C: 41: _delay(10);
   379                           	opt asmopt_off
   380  0732  3003               movlw	3
   381  0733  00F2               movwf	(??_main+0)+0,f
   382  0734                     u2377:
   383  0734  0BF2               decfsz	(??_main+0)+0,f
   384  0735  2F34               	goto	u2377
   385                           opt asmopt_on
   386                           
   387                           	line	44
   388                           ;FOLLOW LINE.C: 44: if ((rightSensor<=145)&& (leftSensor<=145))
   389  0736  3092               	movlw	(092h)
   390  0737  0271               	subwf	(_rightSensor),w
   391  0738  1803               	skipnc
   392  0739  2F3B               	goto	u2241
   393  073A  2F3C               	goto	u2240
   394  073B                     u2241:
   395  073B  2F52               	goto	l3038
   396  073C                     u2240:
   397                           	
   398  073C                     l3032:	
   399  073C  3092               	movlw	(092h)
   400  073D  0270               	subwf	(_leftSensor),w
   401  073E  1803               	skipnc
   402  073F  2F41               	goto	u2251
   403  0740  2F42               	goto	u2250
   404  0741                     u2251:
   405  0741  2F52               	goto	l3038
   406  0742                     u2250:
   407                           	line	46
   408                           	
   409  0742                     l3034:	
   410                           ;FOLLOW LINE.C: 45: {
   411                           ;FOLLOW LINE.C: 46: RC0=1, RC1=0, RC3=1, RC4=0;
   412  0742  1283               	bcf	status, 5	;RP0=0, select bank0
   413  0743  1303               	bcf	status, 6	;RP1=0, select bank0
   414  0744  1407               	bsf	(56/8),(56)&7
   415  0745  1087               	bcf	(57/8),(57)&7
   416  0746  1587               	bsf	(59/8),(59)&7
   417  0747  1207               	bcf	(60/8),(60)&7
   418                           	line	47
   419                           	
   420  0748                     l3036:	
   421                           ;FOLLOW LINE.C: 47: _delay(10000);
   422                           	opt asmopt_off
   423  0748  300D               movlw	13
   424  0749  00F3               movwf	((??_main+0)+0+1),f
   425  074A  30FB               	movlw	251
   426  074B  00F2               movwf	((??_main+0)+0),f
   427  074C                     u2387:
   428  074C  0BF2               	decfsz	((??_main+0)+0),f
   429  074D  2F4C               	goto	u2387
   430  074E  0BF3               	decfsz	((??_main+0)+0+1),f
   431  074F  2F4C               	goto	u2387
   432  0750  2F51               	nop2
   433                           opt asmopt_on
   434                           
   435                           	line	48
   436                           ;FOLLOW LINE.C: 48: }
   437  0751  2F0B               	goto	l3018
   438                           	line	49
   439                           	
   440  0752                     l902:	
   441                           	
   442  0752                     l3038:	
   443                           ;FOLLOW LINE.C: 49: else if ((rightSensor<145)&& (leftSensor>=145))
   444  0752  3091               	movlw	(091h)
   445  0753  0271               	subwf	(_rightSensor),w
   446  0754  1803               	skipnc
   447  0755  2F57               	goto	u2261
   448  0756  2F58               	goto	u2260
   449  0757                     u2261:
   450  0757  2F75               	goto	l3048
   451  0758                     u2260:
   452                           	
   453  0758                     l3040:	
   454  0758  3091               	movlw	(091h)
   455  0759  0270               	subwf	(_leftSensor),w
   456  075A  1C03               	skipc
   457  075B  2F5D               	goto	u2271
   458  075C  2F5E               	goto	u2270
   459  075D                     u2271:
   460  075D  2F75               	goto	l3048
   461  075E                     u2270:
   462                           	line	51
   463                           	
   464  075E                     l3042:	
   465                           ;FOLLOW LINE.C: 50: {
   466                           ;FOLLOW LINE.C: 51: RC0=1, RC1=0, RC3=0, RC4=0;
   467  075E  1283               	bcf	status, 5	;RP0=0, select bank0
   468  075F  1303               	bcf	status, 6	;RP1=0, select bank0
   469  0760  1407               	bsf	(56/8),(56)&7
   470  0761  1087               	bcf	(57/8),(57)&7
   471  0762  1187               	bcf	(59/8),(59)&7
   472  0763  1207               	bcf	(60/8),(60)&7
   473                           	line	52
   474                           	
   475  0764                     l3044:	
   476                           ;FOLLOW LINE.C: 52: _delay(10000);
   477                           	opt asmopt_off
   478  0764  300D               movlw	13
   479  0765  00F3               movwf	((??_main+0)+0+1),f
   480  0766  30FB               	movlw	251
   481  0767  00F2               movwf	((??_main+0)+0),f
   482  0768                     u2397:
   483  0768  0BF2               	decfsz	((??_main+0)+0),f
   484  0769  2F68               	goto	u2397
   485  076A  0BF3               	decfsz	((??_main+0)+0+1),f
   486  076B  2F68               	goto	u2397
   487  076C  2F6D               	nop2
   488                           opt asmopt_on
   489                           
   490                           	line	53
   491                           	
   492  076D                     l3046:	
   493                           ;FOLLOW LINE.C: 53: RC7=1;
   494  076D  1283               	bcf	status, 5	;RP0=0, select bank0
   495  076E  1303               	bcf	status, 6	;RP1=0, select bank0
   496  076F  1787               	bsf	(63/8),(63)&7
   497                           	line	54
   498                           ;FOLLOW LINE.C: 54: _delay(10);
   499                           	opt asmopt_off
   500  0770  3003               movlw	3
   501  0771  00F2               movwf	(??_main+0)+0,f
   502  0772                     u2407:
   503  0772  0BF2               decfsz	(??_main+0)+0,f
   504  0773  2F72               	goto	u2407
   505                           opt asmopt_on
   506                           
   507                           	line	55
   508                           ;FOLLOW LINE.C: 55: }
   509  0774  2F0B               	goto	l3018
   510                           	line	57
   511                           	
   512  0775                     l904:	
   513                           	
   514  0775                     l3048:	
   515                           ;FOLLOW LINE.C: 57: else if ((rightSensor>=145)&& (leftSensor<=145))
   516  0775  3091               	movlw	(091h)
   517  0776  0271               	subwf	(_rightSensor),w
   518  0777  1C03               	skipc
   519  0778  2F7A               	goto	u2281
   520  0779  2F7B               	goto	u2280
   521  077A                     u2281:
   522  077A  2F98               	goto	l3058
   523  077B                     u2280:
   524                           	
   525  077B                     l3050:	
   526  077B  3092               	movlw	(092h)
   527  077C  0270               	subwf	(_leftSensor),w
   528  077D  1803               	skipnc
   529  077E  2F80               	goto	u2291
   530  077F  2F81               	goto	u2290
   531  0780                     u2291:
   532  0780  2F98               	goto	l3058
   533  0781                     u2290:
   534                           	line	59
   535                           	
   536  0781                     l3052:	
   537                           ;FOLLOW LINE.C: 58: {
   538                           ;FOLLOW LINE.C: 59: RC0=0, RC1=0, RC3=1, RC4=0;
   539  0781  1283               	bcf	status, 5	;RP0=0, select bank0
   540  0782  1303               	bcf	status, 6	;RP1=0, select bank0
   541  0783  1007               	bcf	(56/8),(56)&7
   542  0784  1087               	bcf	(57/8),(57)&7
   543  0785  1587               	bsf	(59/8),(59)&7
   544  0786  1207               	bcf	(60/8),(60)&7
   545                           	line	60
   546                           	
   547  0787                     l3054:	
   548                           ;FOLLOW LINE.C: 60: _delay(10000);
   549                           	opt asmopt_off
   550  0787  300D               movlw	13
   551  0788  00F3               movwf	((??_main+0)+0+1),f
   552  0789  30FB               	movlw	251
   553  078A  00F2               movwf	((??_main+0)+0),f
   554  078B                     u2417:
   555  078B  0BF2               	decfsz	((??_main+0)+0),f
   556  078C  2F8B               	goto	u2417
   557  078D  0BF3               	decfsz	((??_main+0)+0+1),f
   558  078E  2F8B               	goto	u2417
   559  078F  2F90               	nop2
   560                           opt asmopt_on
   561                           
   562                           	line	61
   563                           	
   564  0790                     l3056:	
   565                           ;FOLLOW LINE.C: 61: RC7=1;
   566  0790  1283               	bcf	status, 5	;RP0=0, select bank0
   567  0791  1303               	bcf	status, 6	;RP1=0, select bank0
   568  0792  1787               	bsf	(63/8),(63)&7
   569                           	line	62
   570                           ;FOLLOW LINE.C: 62: _delay(10);
   571                           	opt asmopt_off
   572  0793  3003               movlw	3
   573  0794  00F2               movwf	(??_main+0)+0,f
   574  0795                     u2427:
   575  0795  0BF2               decfsz	(??_main+0)+0,f
   576  0796  2F95               	goto	u2427
   577                           opt asmopt_on
   578                           
   579                           	line	63
   580                           ;FOLLOW LINE.C: 63: }
   581  0797  2F0B               	goto	l3018
   582                           	line	65
   583                           	
   584  0798                     l906:	
   585                           	
   586  0798                     l3058:	
   587                           ;FOLLOW LINE.C: 65: else if ((rightSensor>145)&& (leftSensor>145))
   588  0798  3092               	movlw	(092h)
   589  0799  0271               	subwf	(_rightSensor),w
   590  079A  1C03               	skipc
   591  079B  2F9D               	goto	u2301
   592  079C  2F9E               	goto	u2300
   593  079D                     u2301:
   594  079D  2F0B               	goto	l3018
   595  079E                     u2300:
   596                           	
   597  079E                     l3060:	
   598  079E  3092               	movlw	(092h)
   599  079F  0270               	subwf	(_leftSensor),w
   600  07A0  1C03               	skipc
   601  07A1  2FA3               	goto	u2311
   602  07A2  2FA4               	goto	u2310
   603  07A3                     u2311:
   604  07A3  2F0B               	goto	l3018
   605  07A4                     u2310:
   606                           	line	67
   607                           	
   608  07A4                     l3062:	
   609                           ;FOLLOW LINE.C: 66: {
   610                           ;FOLLOW LINE.C: 67: RC0=0, RC1=0, RC3=0, RC4=0;
   611  07A4  1283               	bcf	status, 5	;RP0=0, select bank0
   612  07A5  1303               	bcf	status, 6	;RP1=0, select bank0
   613  07A6  1007               	bcf	(56/8),(56)&7
   614  07A7  1087               	bcf	(57/8),(57)&7
   615  07A8  1187               	bcf	(59/8),(59)&7
   616  07A9  1207               	bcf	(60/8),(60)&7
   617                           	line	68
   618                           	
   619  07AA                     l3064:	
   620                           ;FOLLOW LINE.C: 68: _delay(100);
   621                           	opt asmopt_off
   622  07AA  3021               movlw	33
   623  07AB  00F2               movwf	(??_main+0)+0,f
   624  07AC                     u2437:
   625  07AC  0BF2               decfsz	(??_main+0)+0,f
   626  07AD  2FAC               	goto	u2437
   627                           opt asmopt_on
   628                           
   629                           	line	69
   630                           	
   631  07AE                     l3066:	
   632                           ;FOLLOW LINE.C: 69: RC7=1;
   633  07AE  1283               	bcf	status, 5	;RP0=0, select bank0
   634  07AF  1303               	bcf	status, 6	;RP1=0, select bank0
   635  07B0  1787               	bsf	(63/8),(63)&7
   636                           	line	70
   637                           ;FOLLOW LINE.C: 70: _delay(10);
   638                           	opt asmopt_off
   639  07B1  3003               movlw	3
   640  07B2  00F2               movwf	(??_main+0)+0,f
   641  07B3                     u2447:
   642  07B3  0BF2               decfsz	(??_main+0)+0,f
   643  07B4  2FB3               	goto	u2447
   644                           opt asmopt_on
   645                           
   646                           	line	72
   647                           ;FOLLOW LINE.C: 72: while(!((rightSensor>145)&& (leftSensor<=145)))
   648  07B5  2FEB               	goto	l909
   649                           	
   650  07B6                     l910:	
   651                           	line	74
   652                           ;FOLLOW LINE.C: 73: {
   653                           ;FOLLOW LINE.C: 74: RC0=1, RC1=0, RC3=0, RC4=1;
   654  07B6  1283               	bcf	status, 5	;RP0=0, select bank0
   655  07B7  1303               	bcf	status, 6	;RP1=0, select bank0
   656  07B8  1407               	bsf	(56/8),(56)&7
   657  07B9  1087               	bcf	(57/8),(57)&7
   658  07BA  1187               	bcf	(59/8),(59)&7
   659  07BB  1607               	bsf	(60/8),(60)&7
   660                           	line	75
   661                           	
   662  07BC                     l3068:	
   663                           ;FOLLOW LINE.C: 75: _delay(100);
   664                           	opt asmopt_off
   665  07BC  3021               movlw	33
   666  07BD  00F2               movwf	(??_main+0)+0,f
   667  07BE                     u2457:
   668  07BE  0BF2               decfsz	(??_main+0)+0,f
   669  07BF  2FBE               	goto	u2457
   670                           opt asmopt_on
   671                           
   672                           	line	76
   673                           	
   674  07C0                     l3070:	
   675                           ;FOLLOW LINE.C: 76: PORTC=0b00000000;
   676  07C0  1283               	bcf	status, 5	;RP0=0, select bank0
   677  07C1  1303               	bcf	status, 6	;RP1=0, select bank0
   678  07C2  0187               	clrf	(7)	;volatile
   679                           	line	78
   680                           	
   681  07C3                     l3072:	
   682                           ;FOLLOW LINE.C: 78: ADCON0bits.CHS=0B1011;
   683  07C3  081F               	movf	(31),w	;volatile
   684  07C4  39C3               	andlw	not (((1<<4)-1)<<2)
   685  07C5  382C               	iorlw	(0Bh & ((1<<4)-1))<<2
   686  07C6  009F               	movwf	(31)	;volatile
   687                           	line	79
   688                           	
   689  07C7                     l3074:	
   690                           ;FOLLOW LINE.C: 79: GO_DONE=1;
   691  07C7  149F               	bsf	(249/8),(249)&7
   692                           	line	80
   693                           ;FOLLOW LINE.C: 80: while(GO_DONE==1){}
   694  07C8  2FC9               	goto	l911
   695                           	
   696  07C9                     l912:	
   697                           	
   698  07C9                     l911:	
   699  07C9  189F               	btfsc	(249/8),(249)&7
   700  07CA  2FCC               	goto	u2321
   701  07CB  2FCD               	goto	u2320
   702  07CC                     u2321:
   703  07CC  2FC9               	goto	l911
   704  07CD                     u2320:
   705  07CD  2FCE               	goto	l3076
   706                           	
   707  07CE                     l913:	
   708                           	line	81
   709                           	
   710  07CE                     l3076:	
   711                           ;FOLLOW LINE.C: 81: rightSensor=ADRESH;
   712  07CE  081E               	movf	(30),w	;volatile
   713  07CF  00F2               	movwf	(??_main+0)+0
   714  07D0  0872               	movf	(??_main+0)+0,w
   715  07D1  00F1               	movwf	(_rightSensor)
   716                           	line	82
   717                           ;FOLLOW LINE.C: 82: _delay(10);
   718                           	opt asmopt_off
   719  07D2  3003               movlw	3
   720  07D3  00F2               movwf	(??_main+0)+0,f
   721  07D4                     u2467:
   722  07D4  0BF2               decfsz	(??_main+0)+0,f
   723  07D5  2FD4               	goto	u2467
   724                           opt asmopt_on
   725                           
   726                           	line	84
   727                           	
   728  07D6                     l3078:	
   729                           ;FOLLOW LINE.C: 84: ADCON0bits.CHS=0B1010;
   730  07D6  1283               	bcf	status, 5	;RP0=0, select bank0
   731  07D7  1303               	bcf	status, 6	;RP1=0, select bank0
   732  07D8  081F               	movf	(31),w	;volatile
   733  07D9  39C3               	andlw	not (((1<<4)-1)<<2)
   734  07DA  3828               	iorlw	(0Ah & ((1<<4)-1))<<2
   735  07DB  009F               	movwf	(31)	;volatile
   736                           	line	85
   737                           	
   738  07DC                     l3080:	
   739                           ;FOLLOW LINE.C: 85: GO_DONE=1;
   740  07DC  149F               	bsf	(249/8),(249)&7
   741                           	line	86
   742                           ;FOLLOW LINE.C: 86: while(GO_DONE==1){}
   743  07DD  2FDE               	goto	l914
   744                           	
   745  07DE                     l915:	
   746                           	
   747  07DE                     l914:	
   748  07DE  189F               	btfsc	(249/8),(249)&7
   749  07DF  2FE1               	goto	u2331
   750  07E0  2FE2               	goto	u2330
   751  07E1                     u2331:
   752  07E1  2FDE               	goto	l914
   753  07E2                     u2330:
   754  07E2  2FE3               	goto	l3082
   755                           	
   756  07E3                     l916:	
   757                           	line	87
   758                           	
   759  07E3                     l3082:	
   760                           ;FOLLOW LINE.C: 87: leftSensor=ADRESH;
   761  07E3  081E               	movf	(30),w	;volatile
   762  07E4  00F2               	movwf	(??_main+0)+0
   763  07E5  0872               	movf	(??_main+0)+0,w
   764  07E6  00F0               	movwf	(_leftSensor)
   765                           	line	88
   766                           ;FOLLOW LINE.C: 88: _delay(10);
   767                           	opt asmopt_off
   768  07E7  3003               movlw	3
   769  07E8  00F2               movwf	(??_main+0)+0,f
   770  07E9                     u2477:
   771  07E9  0BF2               decfsz	(??_main+0)+0,f
   772  07EA  2FE9               	goto	u2477
   773                           opt asmopt_on
   774                           
   775                           	line	89
   776                           	
   777  07EB                     l909:	
   778                           	line	72
   779  07EB  3092               	movlw	(092h)
   780  07EC  0271               	subwf	(_rightSensor),w
   781  07ED  1C03               	skipc
   782  07EE  2FF0               	goto	u2341
   783  07EF  2FF1               	goto	u2340
   784  07F0                     u2341:
   785  07F0  2FB6               	goto	l910
   786  07F1                     u2340:
   787                           	
   788  07F1                     l3084:	
   789  07F1  3092               	movlw	(092h)
   790  07F2  0270               	subwf	(_leftSensor),w
   791  07F3  1803               	skipnc
   792  07F4  2FF6               	goto	u2351
   793  07F5  2FF7               	goto	u2350
   794  07F6                     u2351:
   795  07F6  2FB6               	goto	l910
   796  07F7                     u2350:
   797  07F7  2F0B               	goto	l3018
   798                           	
   799  07F8                     l917:	
   800  07F8  2F0B               	goto	l3018
   801                           	line	91
   802                           	
   803  07F9                     l908:	
   804  07F9  2F0B               	goto	l3018
   805                           	line	93
   806                           	
   807  07FA                     l907:	
   808  07FA  2F0B               	goto	l3018
   809                           	
   810  07FB                     l905:	
   811  07FB  2F0B               	goto	l3018
   812                           	
   813  07FC                     l903:	
   814  07FC  2F0B               	goto	l3018
   815                           	
   816  07FD                     l918:	
   817                           	line	26
   818  07FD  2F0B               	goto	l3018
   819                           	
   820  07FE                     l919:	
   821                           	line	94
   822                           	
   823  07FE                     l920:	
   824                           	global	start
   825  07FE  118A  2800         	ljmp	start
   826                           	opt stack 0
   827                           GLOBAL	__end_of_main
   828  0800                     	__end_of_main:
   829 ;; =============== function _main ends ============
   830                           
   831                           	signat	_main,88
   832                           	global	_init_hardware
   833                           psect	text77,local,class=CODE,delta=2
   834                           global __ptext77
   835  06EE                     __ptext77:
   836                           
   837 ;; *************** function _init_hardware *****************
   838 ;; Defined at:
   839 ;;		line 96 in file "C:\Users\Administrator\Documents\rea\FOLLOW LINE.C"
   840 ;; Parameters:    Size  Location     Type
   841 ;;		None
   842 ;; Auto vars:     Size  Location     Type
   843 ;;		None
   844 ;; Return value:  Size  Location     Type
   845 ;;		None               void
   846 ;; Registers used:
   847 ;;		wreg, status,2
   848 ;; Tracked objects:
   849 ;;		On entry : 0/0
   850 ;;		On exit  : 0/0
   851 ;;		Unchanged: 0/0
   852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   853 ;;      Params:         0       0       0       0
   854 ;;      Locals:         0       0       0       0
   855 ;;      Temps:          0       0       0       0
   856 ;;      Totals:         0       0       0       0
   857 ;;Total ram usage:        0 bytes
   858 ;; Hardware stack levels used:    1
   859 ;; This function calls:
   860 ;;		Nothing
   861 ;; This function is called by:
   862 ;;		_main
   863 ;; This function uses a non-reentrant model
   864 ;;
   865                           psect	text77
   866                           	file	"C:\Users\Administrator\Documents\rea\FOLLOW LINE.C"
   867                           	line	96
   868                           	global	__size_of_init_hardware
   869  0016                     	__size_of_init_hardware	equ	__end_of_init_hardware-_init_hardware
   870                           	
   871  06EE                     _init_hardware:	
   872                           	opt	stack 7
   873                           ; Regs used in _init_hardware: [wreg+status,2]
   874                           	line	98
   875                           	
   876  06EE                     l2146:	
   877                           ;FOLLOW LINE.C: 98: ANSEL = 0b00000000;
   878  06EE  1283               	bcf	status, 5	;RP0=0, select bank2
   879  06EF  1703               	bsf	status, 6	;RP1=1, select bank2
   880  06F0  019E               	clrf	(286)^0100h	;volatile
   881                           	line	99
   882                           	
   883  06F1                     l2148:	
   884                           ;FOLLOW LINE.C: 99: ANSELH = 0b00001100;
   885  06F1  300C               	movlw	(0Ch)
   886  06F2  009F               	movwf	(287)^0100h	;volatile
   887                           	line	101
   888                           	
   889  06F3                     l2150:	
   890                           ;FOLLOW LINE.C: 101: ADCON0=0B00101101;
   891  06F3  302D               	movlw	(02Dh)
   892  06F4  1283               	bcf	status, 5	;RP0=0, select bank0
   893  06F5  1303               	bcf	status, 6	;RP1=0, select bank0
   894  06F6  009F               	movwf	(31)	;volatile
   895                           	line	105
   896                           	
   897  06F7                     l2152:	
   898                           ;FOLLOW LINE.C: 105: TRISA = 0b00100000;
   899  06F7  3020               	movlw	(020h)
   900  06F8  1683               	bsf	status, 5	;RP0=1, select bank1
   901  06F9  1303               	bcf	status, 6	;RP1=0, select bank1
   902  06FA  0085               	movwf	(133)^080h	;volatile
   903                           	line	106
   904                           	
   905  06FB                     l2154:	
   906                           ;FOLLOW LINE.C: 106: TRISB = 0b00110000;
   907  06FB  3030               	movlw	(030h)
   908  06FC  0086               	movwf	(134)^080h	;volatile
   909                           	line	107
   910                           ;FOLLOW LINE.C: 107: TRISC = 0b00000000;
   911  06FD  0187               	clrf	(135)^080h	;volatile
   912                           	line	110
   913                           ;FOLLOW LINE.C: 110: PORTA = 0b00000000;
   914  06FE  1283               	bcf	status, 5	;RP0=0, select bank0
   915  06FF  1303               	bcf	status, 6	;RP1=0, select bank0
   916  0700  0185               	clrf	(5)	;volatile
   917                           	line	111
   918                           ;FOLLOW LINE.C: 111: PORTB = 0b00000000;
   919  0701  0186               	clrf	(6)	;volatile
   920                           	line	112
   921                           ;FOLLOW LINE.C: 112: PORTC = 0b00000000;
   922  0702  0187               	clrf	(7)	;volatile
   923                           	line	115
   924                           	
   925  0703                     l923:	
   926  0703  0008               	return
   927                           	opt stack 0
   928                           GLOBAL	__end_of_init_hardware
   929  0704                     	__end_of_init_hardware:
   930 ;; =============== function _init_hardware ends ============
   931                           
   932                           	signat	_init_hardware,88
   933                           psect	text78,local,class=CODE,delta=2
   934                           global __ptext78
   935  0000                     __ptext78:
   936                           	global	btemp
   937  007E                     	btemp set 07Eh
   938                           
   939                           	DABS	1,126,2	;btemp
   940                           	global	wtemp0
   941  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Tue Dec 18 10:51:55 2018

                    _RD 0C60                      _WR 0C61                     l900 0729                     l901 072E  
                   l910 07B6                     l902 0752                     l903 07FC                     l911 07C9  
                   l920 07FE                     l912 07C9                     l904 0775                     l905 07FB  
                   l913 07CE                     l914 07DE                     l906 0798                     l923 0703  
                   l907 07FA                     l915 07DE                     l908 07F9                     l916 07E3  
                   l917 07F8                     l909 07EB                     l918 07FD                     l919 07FE  
                   l895 070B                     l896 0714                     l897 0714                     l898 0719  
                   l899 0729                     _GIE 005F                     _RC0 0038                     _RC1 0039  
                   _RC3 003B                     _RC4 003C                     _RC7 003F                    l3020 070E  
                  l2150 06F3                    l3030 072E                    l3022 0712                    l3014 0704  
                  l2152 06F7                    l3040 0758                    l3032 073C                    l3024 0719  
                  l3016 0707                    l2154 06FB                    l2146 06EE                    l3050 077B  
                  l3042 075E                    l3034 0742                    l3026 0721                    l3018 070B  
                  l2148 06F1                    l3060 079E                    l3052 0781                    l3044 0764  
                  l3036 0748                    l3028 0727                    l3070 07C0                    l3062 07A4  
                  l3054 0787                    l3046 076D                    l3038 0752                    l3080 07DC  
                  l3072 07C3                    l3064 07AA                    l3056 0790                    l3048 0775  
                  l3082 07E3                    l3074 07C7                    l3066 07AE                    l3058 0798  
                  l3084 07F1                    l3076 07CE                    l3068 07BC                    l3078 07D6  
                  u2300 079E                    u2220 0718                    u2301 079D                    u2221 0717  
                  u2310 07A4                    u2230 072D                    u2311 07A3                    u2231 072C  
                  u2320 07CD                    u2240 073C                    u2321 07CC                    u2241 073B  
                  u2330 07E2                    u2250 0742                    u2331 07E1                    u2251 0741  
                  u2340 07F1                    u2260 0758                    u2341 07F0                    u2261 0757  
                  u2350 07F7                    u2270 075E                    u2351 07F6                    u2407 0772  
                  u2271 075D                    u2280 077B                    u2417 078B                    u2281 077A  
                  u2290 0781                    u2427 0795                    u2291 0780                    u2437 07AC  
                  u2447 07B3                    u2367 071F                    u2457 07BE                    u2377 0734  
                  u2467 07D4                    u2387 074C                    u2477 07E9                    u2397 0768  
                  _WREN 0C62                    _main 0704                    btemp 007E                    start 0000  
                 ?_main 0072                   _EEADR 010D                   _CARRY 0018                   _ANSEL 011E  
                 _PORTA 0005                   _PORTB 0006                   _PORTC 0007                   _TRISA 0085  
                 _TRISB 0086                   _TRISC 0087                   status 0003                   wtemp0 007E  
          __end_of_main 0800                  ??_main 0072                  _ADCON0 001F                  _ADRESH 001E  
                _EEDATA 010C                  _EECON1 018C                  _EECON2 018D                  _ANSELH 011F  
__size_of_init_hardware 0016          __pcstackCOMMON 0072           _init_hardware 06EE              __pmaintext 0704  
        ?_init_hardware 0072                 _GO_DONE 00F9              _leftSensor 0070    end_of_initialization 06EB  
       ??_init_hardware 0072     start_initialization 06E9             __pbssCOMMON 0070              _ADCON0bits 001F  
 __end_of_init_hardware 0704                __ptext76 0000                __ptext77 06EE                __ptext78 0000  
         __size_of_main 00FC             _rightSensor 0071  
